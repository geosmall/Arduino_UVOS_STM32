# See: https://arduino.github.io/arduino-cli/latest/platform-specification/

menu.pnum=Board part number

menu.xserial=U(S)ART support
menu.usb=USB support (if available)
menu.xusb=USB speed (if available)
menu.virtio=Virtual serial support

menu.opt=Optimize
menu.dbg=Debug symbols and core logs
menu.rtlib=C Runtime Library
menu.upload_method=Upload method

################################################################################
# Flight Controller boards

Flight_ctrl.name=Flight Controllers

Flight_ctrl.build.core=arduino
Flight_ctrl.build.board=Flight_ctrl
Flight_ctrl.build.variant_h=variant_{build.board}.h
Flight_ctrl.build.st_extra_flags=-D{build.product_line} {build.enable_usb} {build.xSerial}
Flight_ctrl.upload.maximum_size=0
Flight_ctrl.upload.maximum_data_size=0

# FC_REVO_F405RG board
Flight_ctrl.menu.pnum.FC_REVO_F405RG=Revo F405RG
Flight_ctrl.menu.pnum.FC_REVO_F405RG.node="NODE_F405RG,REVO"
Flight_ctrl.menu.pnum.FC_REVO_F405RG.upload.maximum_size=1048576
Flight_ctrl.menu.pnum.FC_REVO_F405RG.upload.maximum_data_size=131072
Flight_ctrl.menu.pnum.FC_REVO_F405RG.build.mcu=cortex-m4
Flight_ctrl.menu.pnum.FC_REVO_F405RG.build.fpu=-mfpu=fpv4-sp-d16
Flight_ctrl.menu.pnum.FC_REVO_F405RG.build.float-abi=-mfloat-abi=hard
Flight_ctrl.menu.pnum.FC_REVO_F405RG.build.board=FC_REVO_F405RG
Flight_ctrl.menu.pnum.FC_REVO_F405RG.build.series=STM32F4xx
Flight_ctrl.menu.pnum.FC_REVO_F405RG.build.product_line=STM32F405xx
Flight_ctrl.menu.pnum.FC_REVO_F405RG.build.variant=STM32F4xx/FC_Revo_F405RG
Flight_ctrl.menu.pnum.FC_REVO_F405RG.build.cmsis_lib_gcc=arm_cortexM4lf_math

# Upload menu
Flight_ctrl.menu.upload_method.swdMethod=STM32CubeProgrammer (SWD)
Flight_ctrl.menu.upload_method.swdMethod.upload.protocol=0
Flight_ctrl.menu.upload_method.swdMethod.upload.options=-g
Flight_ctrl.menu.upload_method.swdMethod.upload.tool=stm32CubeProg

Flight_ctrl.menu.upload_method.serialMethod=STM32CubeProgrammer (Serial)
Flight_ctrl.menu.upload_method.serialMethod.upload.protocol=1
Flight_ctrl.menu.upload_method.serialMethod.upload.options={serial.port.file} -s
Flight_ctrl.menu.upload_method.serialMethod.upload.tool=stm32CubeProg

Flight_ctrl.menu.upload_method.dfuMethod=STM32CubeProgrammer (DFU)
Flight_ctrl.menu.upload_method.dfuMethod.upload.protocol=2
Flight_ctrl.menu.upload_method.dfuMethod.upload.options=-g
Flight_ctrl.menu.upload_method.dfuMethod.upload.tool=stm32CubeProg

Flight_ctrl.menu.upload_method.clipboard=Clipboard (Copy Path)
Flight_ctrl.menu.upload_method.clipboard.upload.protocol=0
Flight_ctrl.menu.upload_method.clipboard.upload.options=-g
Flight_ctrl.menu.upload_method.clipboard.upload.tool=clipboard_upload

################################################################################
# Dev boards

Dev_boards.name=Development Boards

Dev_boards.build.core=arduino
Dev_boards.build.board=Dev_boards
Dev_boards.build.variant_h=variant_{build.board}.h
Dev_boards.build.st_extra_flags=-D{build.product_line} {build.enable_usb} {build.xSerial}
Dev_boards.upload.maximum_size=0
Dev_boards.upload.maximum_data_size=0

# BlackPill F401CC
Dev_boards.menu.pnum.BLACKPILL_F401CC=BlackPill F401CC
Dev_boards.menu.pnum.BLACKPILL_F401CC.node="NODE_F401CC,BlkPill"
Dev_boards.menu.pnum.BLACKPILL_F401CC.upload.maximum_size=262144
Dev_boards.menu.pnum.BLACKPILL_F401CC.upload.maximum_data_size=65536
Dev_boards.menu.pnum.BLACKPILL_F401CC.build.mcu=cortex-m4
Dev_boards.menu.pnum.BLACKPILL_F401CC.build.fpu=-mfpu=fpv4-sp-d16
Dev_boards.menu.pnum.BLACKPILL_F401CC.build.float-abi=-mfloat-abi=hard
Dev_boards.menu.pnum.BLACKPILL_F401CC.build.board=BLACKPILL_F401CC
Dev_boards.menu.pnum.BLACKPILL_F401CC.build.series=STM32F4xx
Dev_boards.menu.pnum.BLACKPILL_F401CC.build.product_line=STM32F401xC
Dev_boards.menu.pnum.BLACKPILL_F401CC.build.variant=STM32F4xx/Dev_Blackpill_F401CC
Dev_boards.menu.pnum.BLACKPILL_F401CC.build.variant_h=variant_BLACKPILL_F401Cx.h
Dev_boards.menu.pnum.BLACKPILL_F401CC.build.cmsis_lib_gcc=arm_cortexM4lf_math
Dev_boards.menu.pnum.BLACKPILL_F401CC.build.st_extra_flags=-DHSE_VALUE=25000000U -D{build.product_line} {build.enable_usb} {build.xSerial}

# BlackPill F411CE
Dev_boards.menu.pnum.BLACKPILL_F411CE=BlackPill F411CE
Dev_boards.menu.pnum.BLACKPILL_F411CE.node="NODE_F411CE,BlkPill"
Dev_boards.menu.pnum.BLACKPILL_F411CE.upload.maximum_size=524288
Dev_boards.menu.pnum.BLACKPILL_F411CE.upload.maximum_data_size=131072
Dev_boards.menu.pnum.BLACKPILL_F411CE.build.mcu=cortex-m4
Dev_boards.menu.pnum.BLACKPILL_F411CE.build.fpu=-mfpu=fpv4-sp-d16
Dev_boards.menu.pnum.BLACKPILL_F411CE.build.float-abi=-mfloat-abi=hard
Dev_boards.menu.pnum.BLACKPILL_F411CE.build.board=BLACKPILL_F411CE
Dev_boards.menu.pnum.BLACKPILL_F411CE.build.series=STM32F4xx
Dev_boards.menu.pnum.BLACKPILL_F411CE.build.product_line=STM32F411xE
Dev_boards.menu.pnum.BLACKPILL_F411CE.build.variant=STM32F4xx/Dev_Blackpill_F411CE
Dev_boards.menu.pnum.BLACKPILL_F411CE.build.variant_h=variant_BLACKPILL_F411CE.h
Dev_boards.menu.pnum.BLACKPILL_F411CE.build.cmsis_lib_gcc=arm_cortexM4lf_math
Dev_boards.menu.pnum.BLACKPILL_F411CE.build.st_extra_flags=-DHSE_VALUE=8000000U -D{build.product_line} {build.enable_usb} {build.xSerial}

# DevEBoxH743VITX
Dev_boards.menu.pnum.DevEBoxH743VITX=DevEBox H743VITX
Dev_boards.menu.pnum.DevEBoxH743VITX.node="NODE_H743VI,DevEBox"
Dev_boards.menu.pnum.DevEBoxH743VITX.upload.maximum_size=2097152
Dev_boards.menu.pnum.DevEBoxH743VITX.upload.maximum_data_size=524288
Dev_boards.menu.pnum.DevEBoxH743VITX.build.mcu=cortex-m7
Dev_boards.menu.pnum.DevEBoxH743VITX.build.fpu=-mfpu=fpv4-sp-d16
Dev_boards.menu.pnum.DevEBoxH743VITX.build.float-abi=-mfloat-abi=hard
Dev_boards.menu.pnum.DevEBoxH743VITX.build.board=DevEBoxH743VITX
Dev_boards.menu.pnum.DevEBoxH743VITX.build.series=STM32H7xx
Dev_boards.menu.pnum.DevEBoxH743VITX.build.product_line=STM32H743xx
Dev_boards.menu.pnum.DevEBoxH743VITX.build.variant=STM32H7xx/Dev_DevEBoxH7xx
Dev_boards.menu.pnum.DevEBoxH743VITX.build.variant_h=variant_DevEBoxH7xx.h
Dev_boards.menu.pnum.DevEBoxH743VITX.build.cmsis_lib_gcc=arm_cortexM7lfsp_math
Dev_boards.menu.pnum.DevEBoxH743VITX.build.st_extra_flags=-DCORE_CM7 -DHSE_VALUE=25000000U -D{build.product_line} {build.enable_usb} {build.xSerial}

# Upload menu
Dev_boards.menu.upload_method.swdMethod=STM32CubeProgrammer (SWD)
Dev_boards.menu.upload_method.swdMethod.upload.protocol=0
Dev_boards.menu.upload_method.swdMethod.upload.options=-g
Dev_boards.menu.upload_method.swdMethod.upload.tool=stm32CubeProg

Dev_boards.menu.upload_method.serialMethod=STM32CubeProgrammer (Serial)
Dev_boards.menu.upload_method.serialMethod.upload.protocol=1
Dev_boards.menu.upload_method.serialMethod.upload.options={serial.port.file} -s
Dev_boards.menu.upload_method.serialMethod.upload.tool=stm32CubeProg

Dev_boards.menu.upload_method.dfuMethod=STM32CubeProgrammer (DFU)
Dev_boards.menu.upload_method.dfuMethod.upload.protocol=2
Dev_boards.menu.upload_method.dfuMethod.upload.options=-g
Dev_boards.menu.upload_method.dfuMethod.upload.tool=stm32CubeProg

Dev_boards.menu.upload_method.clipboard=Clipboard (Copy Path)
Dev_boards.menu.upload_method.clipboard.upload.protocol=0
Dev_boards.menu.upload_method.clipboard.upload.options=-g
Dev_boards.menu.upload_method.clipboard.upload.tool=clipboard_upload

################################################################################
# Nucleo 64 boards

Nucleo_64.name=Nucleo-64

Nucleo_64.build.core=arduino
Nucleo_64.build.board=Nucleo_64
Nucleo_64.build.variant_h=variant_{build.board}.h
Nucleo_64.build.st_extra_flags=-D{build.product_line} {build.enable_usb} {build.xSerial}
Nucleo_64.upload.maximum_size=0
Nucleo_64.upload.maximum_data_size=0

# NUCLEO_F401RE board
Nucleo_64.menu.pnum.NUCLEO_F401RE=Nucleo F401RE
Nucleo_64.menu.pnum.NUCLEO_F401RE.node="NODE_F401RE,NUCLEO"
Nucleo_64.menu.pnum.NUCLEO_F401RE.upload.maximum_size=524288
Nucleo_64.menu.pnum.NUCLEO_F401RE.upload.maximum_data_size=98304
Nucleo_64.menu.pnum.NUCLEO_F401RE.build.mcu=cortex-m4
Nucleo_64.menu.pnum.NUCLEO_F401RE.build.fpu=-mfpu=fpv4-sp-d16
Nucleo_64.menu.pnum.NUCLEO_F401RE.build.float-abi=-mfloat-abi=hard
Nucleo_64.menu.pnum.NUCLEO_F401RE.build.board=NUCLEO_F401RE
Nucleo_64.menu.pnum.NUCLEO_F401RE.build.series=STM32F4xx
Nucleo_64.menu.pnum.NUCLEO_F401RE.build.product_line=STM32F401xE
Nucleo_64.menu.pnum.NUCLEO_F401RE.build.variant=STM32F4xx/F401R(B-C-D-E)T
Nucleo_64.menu.pnum.NUCLEO_F401RE.build.cmsis_lib_gcc=arm_cortexM4lf_math

# NUCLEO_F411RE board
Nucleo_64.menu.pnum.NUCLEO_F411RE=Nucleo F411RE
Nucleo_64.menu.pnum.NUCLEO_F411RE.node="NODE_F411RE,NUCLEO"
Nucleo_64.menu.pnum.NUCLEO_F411RE.upload.maximum_size=524288
Nucleo_64.menu.pnum.NUCLEO_F411RE.upload.maximum_data_size=131072
Nucleo_64.menu.pnum.NUCLEO_F411RE.build.mcu=cortex-m4
Nucleo_64.menu.pnum.NUCLEO_F411RE.build.fpu=-mfpu=fpv4-sp-d16
Nucleo_64.menu.pnum.NUCLEO_F411RE.build.float-abi=-mfloat-abi=hard
Nucleo_64.menu.pnum.NUCLEO_F411RE.build.board=NUCLEO_F411RE
Nucleo_64.menu.pnum.NUCLEO_F411RE.build.series=STM32F4xx
Nucleo_64.menu.pnum.NUCLEO_F411RE.build.product_line=STM32F411xE
Nucleo_64.menu.pnum.NUCLEO_F411RE.build.variant=STM32F4xx/F411R(C-E)T
Nucleo_64.menu.pnum.NUCLEO_F411RE.build.cmsis_lib_gcc=arm_cortexM4lf_math

# Upload menu
Nucleo_64.menu.upload_method.swdMethod=STM32CubeProgrammer (SWD)
Nucleo_64.menu.upload_method.swdMethod.upload.protocol=0
Nucleo_64.menu.upload_method.swdMethod.upload.options=-g
Nucleo_64.menu.upload_method.swdMethod.upload.tool=stm32CubeProg

Nucleo_64.menu.upload_method.serialMethod=STM32CubeProgrammer (Serial)
Nucleo_64.menu.upload_method.serialMethod.upload.protocol=1
Nucleo_64.menu.upload_method.serialMethod.upload.options={serial.port.file} -s
Nucleo_64.menu.upload_method.serialMethod.upload.tool=stm32CubeProg

Nucleo_64.menu.upload_method.dfuMethod=STM32CubeProgrammer (DFU)
Nucleo_64.menu.upload_method.dfuMethod.upload.protocol=2
Nucleo_64.menu.upload_method.dfuMethod.upload.options=-g
Nucleo_64.menu.upload_method.dfuMethod.upload.tool=stm32CubeProg

Nucleo_64.menu.upload_method.MassStorage=Mass Storage
Nucleo_64.menu.upload_method.MassStorage.upload.protocol=
Nucleo_64.menu.upload_method.MassStorage.upload.tool=massStorageCopy

################################################################################
# Discovery boards

Disco.name=Discovery

Disco.build.core=arduino
Disco.build.board=Disco
Disco.build.variant_h=variant_{build.board}.h
Disco.build.st_extra_flags=-D{build.product_line} {build.enable_usb} {build.xSerial}
Disco.upload.maximum_size=0
Disco.upload.maximum_data_size=0

# DISCO_F407VG board
Disco.menu.pnum.DISCO_F407VG=STM32F407G-DISCO
Disco.menu.pnum.DISCO_F407VG.node=DIS_F407VG
Disco.menu.pnum.DISCO_F407VG.upload.maximum_size=1048576
Disco.menu.pnum.DISCO_F407VG.upload.maximum_data_size=131072
Disco.menu.pnum.DISCO_F407VG.build.mcu=cortex-m4
Disco.menu.pnum.DISCO_F407VG.build.fpu=-mfpu=fpv4-sp-d16
Disco.menu.pnum.DISCO_F407VG.build.float-abi=-mfloat-abi=hard
Disco.menu.pnum.DISCO_F407VG.build.board=DISCO_F407VG
Disco.menu.pnum.DISCO_F407VG.build.series=STM32F4xx
Disco.menu.pnum.DISCO_F407VG.build.product_line=STM32F407xx
Disco.menu.pnum.DISCO_F407VG.build.variant=STM32F4xx/F407V(E-G)T_F417V(E-G)T
Disco.menu.pnum.DISCO_F407VG.build.cmsis_lib_gcc=arm_cortexM4lf_math

# Upload menu
Disco.menu.upload_method.swdMethod=STM32CubeProgrammer (SWD)
Disco.menu.upload_method.swdMethod.upload.protocol=0
Disco.menu.upload_method.swdMethod.upload.options=-g
Disco.menu.upload_method.swdMethod.upload.tool=stm32CubeProg

Disco.menu.upload_method.serialMethod=STM32CubeProgrammer (Serial)
Disco.menu.upload_method.serialMethod.upload.protocol=1
Disco.menu.upload_method.serialMethod.upload.options={serial.port.file} -s
Disco.menu.upload_method.serialMethod.upload.tool=stm32CubeProg

Disco.menu.upload_method.dfuMethod=STM32CubeProgrammer (DFU)
Disco.menu.upload_method.dfuMethod.upload.protocol=2
Disco.menu.upload_method.dfuMethod.upload.options=-g
Disco.menu.upload_method.dfuMethod.upload.tool=stm32CubeProg

Disco.menu.upload_method.clipboard=Clipboard (Copy Path)
Disco.menu.upload_method.clipboard.upload.protocol=0
Disco.menu.upload_method.clipboard.upload.options=-g
Disco.menu.upload_method.clipboard.upload.tool=clipboard_upload

################################################################################
# Serialx activation
Flight_ctrl.menu.xserial.generic=Enabled (generic 'Serial')
Flight_ctrl.menu.xserial.none=Enabled (no generic 'Serial')
Flight_ctrl.menu.xserial.none.build.xSerial=-DHAL_UART_MODULE_ENABLED -DHWSERIAL_NONE
Flight_ctrl.menu.xserial.disabled=Disabled (No Serial support)
Flight_ctrl.menu.xserial.disabled.build.xSerial=

Dev_boards.menu.xserial.generic=Enabled (generic 'Serial')
Dev_boards.menu.xserial.none=Enabled (no generic 'Serial')
Dev_boards.menu.xserial.none.build.xSerial=-DHAL_UART_MODULE_ENABLED -DHWSERIAL_NONE
Dev_boards.menu.xserial.disabled=Disabled (No Serial support)
Dev_boards.menu.xserial.disabled.build.xSerial=

Nucleo_64.menu.xserial.generic=Enabled (generic 'Serial')
Nucleo_64.menu.xserial.none=Enabled (no generic 'Serial')
Nucleo_64.menu.xserial.none.build.xSerial=-DHAL_UART_MODULE_ENABLED -DHWSERIAL_NONE
Nucleo_64.menu.xserial.disabled=Disabled (No Serial support)
Nucleo_64.menu.xserial.disabled.build.xSerial=

Disco.menu.xserial.generic=Enabled (generic 'Serial')
Disco.menu.xserial.none=Enabled (no generic 'Serial')
Disco.menu.xserial.none.build.xSerial=-DHAL_UART_MODULE_ENABLED -DHWSERIAL_NONE
Disco.menu.xserial.disabled=Disabled (no Serial support)
Disco.menu.xserial.disabled.build.xSerial=

# USB connectivity
Flight_ctrl.menu.usb.none=None
Flight_ctrl.menu.usb.CDCgen=CDC (generic 'Serial' supersede U(S)ART)
Flight_ctrl.menu.usb.CDCgen.build.enable_usb={build.usb_flags} -DUSBD_USE_CDC
Flight_ctrl.menu.usb.CDC=CDC (no generic 'Serial')
Flight_ctrl.menu.usb.CDC.build.enable_usb={build.usb_flags} -DUSBD_USE_CDC -DDISABLE_GENERIC_SERIALUSB
Flight_ctrl.menu.xusb.FS=Low/Full Speed
Flight_ctrl.menu.xusb.HS=High Speed
Flight_ctrl.menu.xusb.HS.build.usb_speed=-DUSE_USB_HS
Flight_ctrl.menu.xusb.HSFS=High Speed in Full Speed mode
Flight_ctrl.menu.xusb.HSFS.build.usb_speed=-DUSE_USB_HS -DUSE_USB_HS_IN_FS

Dev_boards.menu.usb.none=None
Dev_boards.menu.usb.CDCgen=CDC (generic 'Serial' supersede U(S)ART)
Dev_boards.menu.usb.CDCgen.build.enable_usb={build.usb_flags} -DUSBD_USE_CDC
Dev_boards.menu.usb.CDC=CDC (no generic 'Serial')
Dev_boards.menu.usb.CDC.build.enable_usb={build.usb_flags} -DUSBD_USE_CDC -DDISABLE_GENERIC_SERIALUSB
Dev_boards.menu.xusb.FS=Low/Full Speed
Dev_boards.menu.xusb.HS=High Speed
Dev_boards.menu.xusb.HS.build.usb_speed=-DUSE_USB_HS
Dev_boards.menu.xusb.HSFS=High Speed in Full Speed mode
Dev_boards.menu.xusb.HSFS.build.usb_speed=-DUSE_USB_HS -DUSE_USB_HS_IN_FS

Nucleo_64.menu.usb.none=None
Nucleo_64.menu.usb.CDCgen=CDC (generic 'Serial' supersede U(S)ART)
Nucleo_64.menu.usb.CDCgen.build.enable_usb={build.usb_flags} -DUSBD_USE_CDC
Nucleo_64.menu.usb.CDC=CDC (no generic 'Serial')
Nucleo_64.menu.usb.CDC.build.enable_usb={build.usb_flags} -DUSBD_USE_CDC -DDISABLE_GENERIC_SERIALUSB
Nucleo_64.menu.xusb.FS=Low/Full Speed
Nucleo_64.menu.xusb.HS=High Speed
Nucleo_64.menu.xusb.HS.build.usb_speed=-DUSE_USB_HS
Nucleo_64.menu.xusb.HSFS=High Speed in Full Speed mode
Nucleo_64.menu.xusb.HSFS.build.usb_speed=-DUSE_USB_HS -DUSE_USB_HS_IN_FS

Disco.menu.usb.none=None
Disco.menu.usb.CDCgen=CDC (generic 'Serial' supersede U(S)ART)
Disco.menu.usb.CDCgen.build.enable_usb={build.usb_flags} -DUSBD_USE_CDC
Disco.menu.usb.CDC=CDC (no generic 'Serial')
Disco.menu.usb.CDC.build.enable_usb={build.usb_flags} -DUSBD_USE_CDC -DDISABLE_GENERIC_SERIALUSB
Disco.menu.xusb.FS=Low/Full Speed
Disco.menu.xusb.HS=High Speed
Disco.menu.xusb.HS.build.usb_speed=-DUSE_USB_HS
Disco.menu.xusb.HSFS=High Speed in Full Speed mode
Disco.menu.xusb.HSFS.build.usb_speed=-DUSE_USB_HS -DUSE_USB_HS_IN_FS

# Optimizations
Flight_ctrl.menu.opt.ogstd=Debug (-Og)
Flight_ctrl.menu.opt.ogstd.build.flags.optimize=-Og
Flight_ctrl.menu.opt.osstd=Smallest (-Os default)
Flight_ctrl.menu.opt.oslto=Smallest (-Os) with LTO
Flight_ctrl.menu.opt.oslto.build.flags.optimize=-Os -flto
Flight_ctrl.menu.opt.o1std=Fast (-O1)
Flight_ctrl.menu.opt.o1std.build.flags.optimize=-O1
Flight_ctrl.menu.opt.o1lto=Fast (-O1) with LTO
Flight_ctrl.menu.opt.o1lto.build.flags.optimize=-O1 -flto
Flight_ctrl.menu.opt.o2std=Faster (-O2)
Flight_ctrl.menu.opt.o2std.build.flags.optimize=-O2
Flight_ctrl.menu.opt.o2lto=Faster (-O2) with LTO
Flight_ctrl.menu.opt.o2lto.build.flags.optimize=-O2 -flto
Flight_ctrl.menu.opt.o3std=Fastest (-O3)
Flight_ctrl.menu.opt.o3std.build.flags.optimize=-O3
Flight_ctrl.menu.opt.o3lto=Fastest (-O3) with LTO
Flight_ctrl.menu.opt.o3lto.build.flags.optimize=-O3 -flto
Flight_ctrl.menu.opt.o0std=No Optimization (-O0)
Flight_ctrl.menu.opt.o0std.build.flags.optimize=-O0

Dev_boards.menu.opt.ogstd=Debug (-Og)
Dev_boards.menu.opt.ogstd.build.flags.optimize=-Og
Dev_boards.menu.opt.osstd=Smallest (-Os default)
Dev_boards.menu.opt.oslto=Smallest (-Os) with LTO
Dev_boards.menu.opt.oslto.build.flags.optimize=-Os -flto
Dev_boards.menu.opt.o1std=Fast (-O1)
Dev_boards.menu.opt.o1std.build.flags.optimize=-O1
Dev_boards.menu.opt.o1lto=Fast (-O1) with LTO
Dev_boards.menu.opt.o1lto.build.flags.optimize=-O1 -flto
Dev_boards.menu.opt.o2std=Faster (-O2)
Dev_boards.menu.opt.o2std.build.flags.optimize=-O2
Dev_boards.menu.opt.o2lto=Faster (-O2) with LTO
Dev_boards.menu.opt.o2lto.build.flags.optimize=-O2 -flto
Dev_boards.menu.opt.o3std=Fastest (-O3)
Dev_boards.menu.opt.o3std.build.flags.optimize=-O3
Dev_boards.menu.opt.o3lto=Fastest (-O3) with LTO
Dev_boards.menu.opt.o3lto.build.flags.optimize=-O3 -flto
Dev_boards.menu.opt.o0std=No Optimization (-O0)
Dev_boards.menu.opt.o0std.build.flags.optimize=-O0

Nucleo_64.menu.opt.ogstd=Debug (-Og)
Nucleo_64.menu.opt.ogstd.build.flags.optimize=-Og
Nucleo_64.menu.opt.osstd=Smallest (-Os default)
Nucleo_64.menu.opt.oslto=Smallest (-Os) with LTO
Nucleo_64.menu.opt.oslto.build.flags.optimize=-Os -flto
Nucleo_64.menu.opt.o1std=Fast (-O1)
Nucleo_64.menu.opt.o1std.build.flags.optimize=-O1
Nucleo_64.menu.opt.o1lto=Fast (-O1) with LTO
Nucleo_64.menu.opt.o1lto.build.flags.optimize=-O1 -flto
Nucleo_64.menu.opt.o2std=Faster (-O2)
Nucleo_64.menu.opt.o2std.build.flags.optimize=-O2
Nucleo_64.menu.opt.o2lto=Faster (-O2) with LTO
Nucleo_64.menu.opt.o2lto.build.flags.optimize=-O2 -flto
Nucleo_64.menu.opt.o3std=Fastest (-O3)
Nucleo_64.menu.opt.o3std.build.flags.optimize=-O3
Nucleo_64.menu.opt.o3lto=Fastest (-O3) with LTO
Nucleo_64.menu.opt.o3lto.build.flags.optimize=-O3 -flto
Nucleo_64.menu.opt.o0std=No Optimization (-O0)
Nucleo_64.menu.opt.o0std.build.flags.optimize=-O0

Disco.menu.opt.ogstd=Debug (-Og)
Disco.menu.opt.ogstd.build.flags.optimize=-Og
Disco.menu.opt.osstd=Smallest (-Os default)
Disco.menu.opt.oslto=Smallest (-Os) with LTO
Disco.menu.opt.oslto.build.flags.optimize=-Os -flto
Disco.menu.opt.o1std=Fast (-O1)
Disco.menu.opt.o1std.build.flags.optimize=-O1
Disco.menu.opt.o1lto=Fast (-O1) with LTO
Disco.menu.opt.o1lto.build.flags.optimize=-O1 -flto
Disco.menu.opt.o2std=Faster (-O2)
Disco.menu.opt.o2std.build.flags.optimize=-O2
Disco.menu.opt.o2lto=Faster (-O2) with LTO
Disco.menu.opt.o2lto.build.flags.optimize=-O2 -flto
Disco.menu.opt.o3std=Fastest (-O3)
Disco.menu.opt.o3std.build.flags.optimize=-O3
Disco.menu.opt.o3lto=Fastest (-O3) with LTO
Disco.menu.opt.o3lto.build.flags.optimize=-O3 -flto
Disco.menu.opt.o0std=No Optimization (-O0)
Disco.menu.opt.o0std.build.flags.optimize=-O0

# Debug information
Flight_ctrl.menu.dbg.enable_all=Core Logs and Symbols Enabled (-g)
Flight_ctrl.menu.dbg.enable_all.build.flags.debug=-g
Flight_ctrl.menu.dbg.none=None
Flight_ctrl.menu.dbg.enable_sym=Symbols Enabled (-g)
Flight_ctrl.menu.dbg.enable_sym.build.flags.debug=-g -DNDEBUG
Flight_ctrl.menu.dbg.enable_log=Core logs Enabled
Flight_ctrl.menu.dbg.enable_log.build.flags.debug=

Dev_boards.menu.dbg.enable_all=Core Logs and Symbols Enabled (-g)
Dev_boards.menu.dbg.enable_all.build.flags.debug=-g
Dev_boards.menu.dbg.none=None
Dev_boards.menu.dbg.enable_sym=Symbols Enabled (-g)
Dev_boards.menu.dbg.enable_sym.build.flags.debug=-g -DNDEBUG
Dev_boards.menu.dbg.enable_log=Core logs Enabled
Dev_boards.menu.dbg.enable_log.build.flags.debug=

Nucleo_64.menu.dbg.enable_all=Core Logs and Symbols Enabled (-g)
Nucleo_64.menu.dbg.enable_all.build.flags.debug=-g
Nucleo_64.menu.dbg.none=None
Nucleo_64.menu.dbg.enable_sym=Symbols Enabled (-g)
Nucleo_64.menu.dbg.enable_sym.build.flags.debug=-g -DNDEBUG
Nucleo_64.menu.dbg.enable_log=Core logs Enabled
Nucleo_64.menu.dbg.enable_log.build.flags.debug=

Disco.menu.dbg.enable_all=Core Logs and Symbols Enabled (-g)
Disco.menu.dbg.enable_all.build.flags.debug=-g
Disco.menu.dbg.none=None
Disco.menu.dbg.enable_sym=Symbols Enabled (-g)
Disco.menu.dbg.enable_sym.build.flags.debug=-g -DNDEBUG
Disco.menu.dbg.enable_log=Core logs Enabled
Disco.menu.dbg.enable_log.build.flags.debug=

# C Runtime Library
Flight_ctrl.menu.rtlib.nano=Newlib Nano (default)
Flight_ctrl.menu.rtlib.nanofp=Newlib Nano + Float Printf
Flight_ctrl.menu.rtlib.nanofp.build.flags.ldspecs=--specs=nano.specs -u _printf_float
Flight_ctrl.menu.rtlib.nanofs=Newlib Nano + Float Scanf
Flight_ctrl.menu.rtlib.nanofs.build.flags.ldspecs=--specs=nano.specs -u _scanf_float
Flight_ctrl.menu.rtlib.nanofps=Newlib Nano + Float Printf/Scanf
Flight_ctrl.menu.rtlib.nanofps.build.flags.ldspecs=--specs=nano.specs -u _printf_float -u _scanf_float
Flight_ctrl.menu.rtlib.full=Newlib Standard
Flight_ctrl.menu.rtlib.full.build.flags.ldspecs=

Dev_boards.menu.rtlib.nano=Newlib Nano (default)
Dev_boards.menu.rtlib.nanofp=Newlib Nano + Float Printf
Dev_boards.menu.rtlib.nanofp.build.flags.ldspecs=--specs=nano.specs -u _printf_float
Dev_boards.menu.rtlib.nanofs=Newlib Nano + Float Scanf
Dev_boards.menu.rtlib.nanofs.build.flags.ldspecs=--specs=nano.specs -u _scanf_float
Dev_boards.menu.rtlib.nanofps=Newlib Nano + Float Printf/Scanf
Dev_boards.menu.rtlib.nanofps.build.flags.ldspecs=--specs=nano.specs -u _printf_float -u _scanf_float
Dev_boards.menu.rtlib.full=Newlib Standard
Dev_boards.menu.rtlib.full.build.flags.ldspecs=

Nucleo_64.menu.rtlib.nano=Newlib Nano (default)
Nucleo_64.menu.rtlib.nanofp=Newlib Nano + Float Printf
Nucleo_64.menu.rtlib.nanofp.build.flags.ldspecs=--specs=nano.specs -u _printf_float
Nucleo_64.menu.rtlib.nanofs=Newlib Nano + Float Scanf
Nucleo_64.menu.rtlib.nanofs.build.flags.ldspecs=--specs=nano.specs -u _scanf_float
Nucleo_64.menu.rtlib.nanofps=Newlib Nano + Float Printf/Scanf
Nucleo_64.menu.rtlib.nanofps.build.flags.ldspecs=--specs=nano.specs -u _printf_float -u _scanf_float
Nucleo_64.menu.rtlib.full=Newlib Standard
Nucleo_64.menu.rtlib.full.build.flags.ldspecs=

Disco.menu.rtlib.nano=Newlib Nano (default)
Disco.menu.rtlib.nanofp=Newlib Nano + Float Printf
Disco.menu.rtlib.nanofp.build.flags.ldspecs=--specs=nano.specs -u _printf_float
Disco.menu.rtlib.nanofs=Newlib Nano + Float Scanf
Disco.menu.rtlib.nanofs.build.flags.ldspecs=--specs=nano.specs -u _scanf_float
Disco.menu.rtlib.nanofps=Newlib Nano + Float Printf/Scanf
Disco.menu.rtlib.nanofps.build.flags.ldspecs=--specs=nano.specs -u _printf_float -u _scanf_float
Disco.menu.rtlib.full=Newlib Standard
Disco.menu.rtlib.full.build.flags.ldspecs=
